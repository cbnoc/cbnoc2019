<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="/stylesheets/css-libs/pure-css/pure.css">
    <link rel="stylesheet" href="/stylesheets/custom/index/custom.css">
    <link rel="stylesheet" href="/stylesheets/css-libs/pure-css/custom-responsive.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="A wall of sheep to get data from firebase in real time.">
    <meta name="keywords" content="Password streaking, firebaseapp, network security, sniffer">
    <meta name="author" content="lockys">
    <meta charset="UTF-8">
    <title>Password Streaking</title>
  </head>

  <body>
    <!-- A CONTAINER TO CONVER ALL THE PAGE -->
    <div class="opacity-container"></div>

    <!-- <img class="wolf" src="static/images/wolf-in-sheeps-clothing.png"> -->
    <!-- <img class="sheep" src="static/images/sheep.png"> -->
    <div class="title-banner">
      <h1># Can I Get The Pas***ord?</h1>
      <h3>https://github.com/John-Lin/wallofsheep</h3>

      <div class="status-container" style="display:none;">Sniffer Status:
        <div class="status bg-red"></div>
      </div>

      <h3 class="content-hidden sniffer-indication">Sniffer will restart in <span class="clock"></span> seconds.</h3>
      <h3 class="closed-alert content-hidden fg-red">Someone or manager closed the sniffer, please wait.</h3>
    </div>

    <!-- TABLE OF PASSWORD. -->
    <div class="table-container">
      <table class="pure-table">
          <thead>
              <tr>
                  <th>Account</th>
                  <th>Password</th>
                  <th>Client</th>
                  <th>Server</th>
                  <th>Protocol</th>
              </tr>
          </thead>
          <tbody id='pwd-wall'>
              <% lists.forEach(function(el, index) { %>
                   <tr>
                     <td><%= el.login %></td>
                     <td><%= el.password %></td>
                     <td><%= el.sIP %>:<%= el.sPort %></td>
                     <td><%= (el.hostname || el.dIP) %>:<%= el.dPort %></td>
                     <td><%= el.protocol %></td>
                   </tr>
              <% }); %>
          </tbody>
      </table>
    </div>

    <script async defer id="github-bjs" src="https://buttons.github.io/buttons.js"></script>

    <footer>
      Network Security Research # Real Time Wall of Sheep @ 2015<br/><br/>
      <a href="https://github.com/John-Lin/wallofsheep" target="_blank">View on Github</a><br/><br/>
      <a class="github-button" href="https://github.com/John-Lin" data-style="mega">Follow @John-Lin</a>
      <a class="github-button" href="https://github.com/lockys" data-style="mega">Follow @lockys</a>
    </footer>

    <div class="arrow">
      <img src="/images/arrow-top.png">
    </div>

    <script src='https://cdn.firebase.com/js/client/2.2.1/firebase.js'></script>
    <script src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js'></script>
    <script src='javascripts/js-libs/jq-hotkey.js'></script>
    <script src='https://cdn.socket.io/socket.io-1.2.0.js'></script>
    <script>
          var arrowEle = $('.arrow'),
              inputListeners = {},
              socket = io.connect();

          function escapeHtml(unsafe) {
              return unsafe
                   .replace(/&/g, "&amp;")
                   .replace(/</g, "&lt;")
                   .replace(/>/g, "&gt;")
                   .replace(/"/g, "&quot;")
                   .replace(/'/g, "&#039;");
           }

          inputListeners.init = function(){
                this.onArrowClick();
                this.onSocketListen();
          }

          inputListeners.onArrowClick = function(){
                arrowEle.click(function(e){
                    $('html, body').animate({scrollTop: 0}, 600);
                });
          }

          inputListeners.onSocketListen = function(){
                socket.on("new-sheep-catch-event",function(d){
                      var infoArr = ['<tr>'],
                          numEle = $('.count-num'),
                          num = parseInt(numEle.html()) + 1;

                      infoArr.push('<td>'+ escapeHtml(d.login) +'</td>');
                      infoArr.push('<td>'+ escapeHtml(d.password) +'</td>');
                      infoArr.push('<td>'+ escapeHtml(d.sIP) + ':' + escapeHtml(d.sPort) +'</td>');
                      infoArr.push('<td>'+ escapeHtml((d.hostname || d.dIP || '')) + ':' + escapeHtml(d.dPort) +'</td>');
                      infoArr.push('<td>'+ escapeHtml(d.protocol) + '</td>');
                      infoArr.push('</tr>');

                      $('#pwd-wall').prepend(infoArr.join(""));
                      numEle.html(num);
                });
          }

          inputListeners.init();

          window.onbeforeunload = function() {
            if(typeof timer !== 'undefined'){
                statusRef.update({status: 'ON'});
            }
          }

    </script>
  </body>
</html>
